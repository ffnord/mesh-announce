(lambda neighbours: {
    open("{}/address".format(path)).read().strip(): {"neighbours": {
        neigh[0]: {"lastseen": neigh[1], "tq": neigh[2]}
        for neigh in neighbours
        if neigh[3] == import_module('os.path').basename(path)[len('lower_'):]
    }}
    for path in
    import_module('itertools').chain(*map(
        lambda batadv_iface : import_module('glob').glob('/sys/class/net/{}/lower_*'.format(batadv_iface)),
        batadv_ifaces
    ))
})(list(import_module('itertools').chain(*map(
    lambda batadv_iface : [
        (line[0], float(line[1].strip('s')), int(line[2].strip(')')), line[4].strip('[]:'))
        for line in map(lambda l: l.replace('(', '').replace('[', '').split(),
            open('/sys/kernel/debug/batman_adv/{}/originators'.format(batadv_iface)))
        if line[0] == line[3]
    ],
    batadv_ifaces
))))
